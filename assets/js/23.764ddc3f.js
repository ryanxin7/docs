(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{428:function(s,t,a){"use strict";a.r(t);var r=a(27),e=Object(r.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"索引原理介绍创建与执行计划分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引原理介绍创建与执行计划分析"}},[s._v("#")]),s._v(" 索引原理介绍创建与执行计划分析")]),s._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#_1-索引的作用"}},[s._v("1.索引的作用")])]),a("li",[a("a",{attrs:{href:"#_2-索引的分类-算法"}},[s._v("2. 索引的分类(算法)")])]),a("li",[a("a",{attrs:{href:"#_3-btree索引算法演变"}},[s._v("3. BTREE索引算法演变")]),a("ul",[a("li",[a("a",{attrs:{href:"#_3-1-顺序查找法"}},[s._v("3.1 顺序查找法")])]),a("li",[a("a",{attrs:{href:"#_3-2-二分查找法"}},[s._v("3.2 二分查找法")])]),a("li",[a("a",{attrs:{href:"#_3-3-二叉排序树查找"}},[s._v("3.3 二叉排序树查找")])]),a("li",[a("a",{attrs:{href:"#_3-4-平衡二叉树"}},[s._v("3.4 平衡二叉树")])]),a("li",[a("a",{attrs:{href:"#_3-5-btree"}},[s._v("3.5 Btree")])])])]),a("li",[a("a",{attrs:{href:"#_4-btree索引功能上的分类"}},[s._v("4. Btree索引功能上的分类")]),a("ul",[a("li",[a("a",{attrs:{href:"#_4-1辅助索引-（二级索引）"}},[s._v("4.1辅助索引 （二级索引）")])]),a("li",[a("a",{attrs:{href:"#_4-2-聚集索引"}},[s._v("4.2 聚集索引")])]),a("li",[a("a",{attrs:{href:"#_4-3-聚集索引和辅助索引共同使用"}},[s._v("4.3 聚集索引和辅助索引共同使用")])]),a("li",[a("a",{attrs:{href:"#_4-4-聚集索引和辅助索引的区别"}},[s._v("4.4 聚集索引和辅助索引的区别")])])])]),a("li",[a("a",{attrs:{href:"#_5-辅助索引细分"}},[s._v("5. 辅助索引细分")])]),a("li",[a("a",{attrs:{href:"#_6-索引树高度"}},[s._v("6. 索引树高度")])]),a("li",[a("a",{attrs:{href:"#_7-索引的命令操作"}},[s._v("7. 索引的命令操作")]),a("ul",[a("li",[a("a",{attrs:{href:"#_7-1-查询索引"}},[s._v("7.1 查询索引")])]),a("li",[a("a",{attrs:{href:"#_7-2-创建索引"}},[s._v("7.2 创建索引")])]),a("li",[a("a",{attrs:{href:"#_7-3-删除索引"}},[s._v("7.3 删除索引")])])])]),a("li",[a("a",{attrs:{href:"#_8-索引压力测试-（对比索引前后效果）"}},[s._v("8. 索引压力测试 （对比索引前后效果）")]),a("ul",[a("li",[a("a",{attrs:{href:"#_8-1-未做优化之前测试"}},[s._v("8.1 未做优化之前测试")])]),a("li",[a("a",{attrs:{href:"#_8-2索引优化后"}},[s._v("8.2索引优化后")])])])]),a("li",[a("a",{attrs:{href:"#_9-执行计划分析"}},[s._v("9. 执行计划分析")]),a("ul",[a("li",[a("a",{attrs:{href:"#_9-1-执行计划的作用"}},[s._v("9.1 执行计划的作用")])]),a("li",[a("a",{attrs:{href:"#_9-2-获取执行"}},[s._v("9.2 获取执行")])]),a("li",[a("a",{attrs:{href:"#_9-3-分析执行计划"}},[s._v("9.3 分析执行计划")])])])])])]),a("p"),s._v(" "),a("h2",{attrs:{id:"_1-索引的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-索引的作用"}},[s._v("#")]),s._v(" 1.索引的作用")]),s._v(" "),a("p",[s._v("类似书的目录,起到优化查询的作用")]),s._v(" "),a("h2",{attrs:{id:"_2-索引的分类-算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-索引的分类-算法"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.")]),s._v(" 索引的分类(算法)")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("B树  默认使用的索引类型")])]),s._v(" "),a("li",[a("p",[s._v("R树 基本不用")])]),s._v(" "),a("li",[a("p",[s._v("Hash 自适应 自动优化不需要设置")])]),s._v(" "),a("li",[a("p",[s._v("FullText  全文索引 类似ES数据库")])]),s._v(" "),a("li",[a("p",[s._v("GIS 索引 5.7版本 用于存储地理位置信息")])])]),s._v(" "),a("h2",{attrs:{id:"_3-btree索引算法演变"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-btree索引算法演变"}},[s._v("#")]),s._v(" 3. BTREE索引算法演变")]),s._v(" "),a("h3",{attrs:{id:"_3-1-顺序查找法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-顺序查找法"}},[s._v("#")]),s._v(" 3.1 顺序查找法")]),s._v(" "),a("p",[s._v("顺序查找，顾名思义，就是从头到尾遍历的查找，直到找到要找的元素x为止，所以这种方法对于有n个元素的线性表而言，在最坏情况下需要n次比较。")]),s._v(" "),a("h3",{attrs:{id:"_3-2-二分查找法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-二分查找法"}},[s._v("#")]),s._v(" 3.2 二分查找法")]),s._v(" "),a("p",[s._v("使用二分查找法的前提是要查找的序列是已经排序好的，所以若序列不是顺序的，应先对其进行排序，或者从小到大，或者从大到小。这种方法的特点是无论怎样查找，每次都只是在一半的数据中查找。")]),s._v(" "),a("h3",{attrs:{id:"_3-3-二叉排序树查找"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-二叉排序树查找"}},[s._v("#")]),s._v(" 3.3 二叉排序树查找")]),s._v(" "),a("p",[s._v("二叉树是一种很有用的非线性结构。在二叉树中，每一个结点的度最大为2，二叉树中的每个结点的子树被分为左子树和右子树。在二叉树中，一个结点可以只有左子树而没有右子树，也可以只有右子树而没有左子树。当一个结点既没有左子树也没有右子树时，该结点即为叶子结点。")]),s._v(" "),a("h3",{attrs:{id:"_3-4-平衡二叉树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-平衡二叉树"}},[s._v("#")]),s._v(" 3.4 平衡二叉树")]),s._v(" "),a("p",[s._v("平衡二叉树 是在 二叉树上 进一步限制,在向树种添加节点时,牺牲一定的时间和空间,通过若干次旋转,达到一定的平衡;以提高查询的性能。")]),s._v(" "),a("h3",{attrs:{id:"_3-5-btree"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-btree"}},[s._v("#")]),s._v(" 3.5 Btree")]),s._v(" "),a("p",[s._v("英文名字叫做B-tree，中间的短线是英文连接符，只是翻译的时候将短线翻译成了减号。"),a("strong",[s._v("全称Balance-tree(平衡多路查找树)")]),s._v("，"),a("strong",[s._v("平衡")]),s._v("的意思是左边和右边分布均匀。"),a("strong",[s._v("多路")]),s._v("的意思是相对于二叉树而言的，二叉树就是二路查找树，查找时只有两条路，而B-tree有多条路，即父节点有多个子节点。使用B-tree结构可以"),a("strong",[s._v("显著减少定位")]),s._v("记录时所经历的中间"),a("strong",[s._v("过程")]),s._v("，从而加快存取速度。这个数据结构一般用于"),a("strong",[s._v("数据库的索引")]),s._v("，综合效率较高。")]),s._v(" "),a("img",{staticStyle:{zoom:"90%"},attrs:{src:"\\img\\day04-10.png",alt:"day04-10"}}),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Btree 演变")]),s._v(" "),a("p",[a("strong",[s._v("b-树")]),s._v(" 上层节点保存的下层节点的最小值。")]),s._v(" "),a("p",[a("strong",[s._v("b+树")]),s._v(" （ 对范围查询优化） 有可能在相邻的叶子节点 ，查询完第一个叶子节点直接查询相邻的叶子节点避免了重新遍历根节点省去IO资源。")]),s._v(" "),a("p",[a("strong",[s._v("b*树")]),s._v(" 在普通b数上增加了 叶子节点和支节点的双向指针机制，进一步对范围查询优化如： "),a("code",[s._v("like")]),s._v(" "),a("code",[s._v(">")]),s._v(" "),a("code",[s._v("<")]),s._v(" 等语句。")]),s._v(" "),a("p",[s._v("目前版本数据库使用"),a("strong",[s._v("b*树")])])]),s._v(" "),a("h2",{attrs:{id:"_4-btree索引功能上的分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-btree索引功能上的分类"}},[s._v("#")]),s._v(" 4. Btree索引功能上的分类")]),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("h3",{attrs:{id:"_4-1辅助索引-（二级索引）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1辅助索引-（二级索引）"}},[s._v("#")]),s._v(" 4.1辅助索引 （二级索引）")]),s._v(" "),a("br"),s._v(" "),a("p",[s._v("(1) 提取索引列的所有值,进行排序")]),s._v(" "),a("p",[s._v("(2) 将排好序的值,均匀的存放在叶子节点,  进一步生成枝节点和根节点")]),s._v(" "),a("p",[s._v("(3) 在叶子节点中的值,都会对应存储主键ID")]),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"\\img\\day04-11.png",alt:"day04-11"}}),s._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"\\img\\day04-12.png",alt:"day04-12"}}),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("p",[s._v("这时如果书的页码不按顺序写页码是乱的，辅助索引会也会性能降低。")]),s._v(" "),a("br"),s._v(" "),a("h3",{attrs:{id:"_4-2-聚集索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-聚集索引"}},[s._v("#")]),s._v(" 4.2 聚集索引")]),s._v(" "),a("br"),s._v(" "),a("p",[s._v("(1) MySQL 会自动选择主键作为聚集索引列,没有主键会选择唯一键,如果都没有会生成隐藏的.主键")]),s._v(" "),a("p",[s._v("(2) MySQL进行存储数据时,会按照聚集索引列值得顺序,有序存储数据行")]),s._v(" "),a("p",[s._v("(3) 聚集索引直接将原表数据页,作为叶子节点,然后提取聚集索引列向上生成枝和根")]),s._v(" "),a("br"),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("聚集索引")]),s._v(" "),a("p",[a("strong",[s._v("聚集索引一般是主键列")]),s._v(" ，创建表的时候创建主键。比如写书时就已经框定了页码 、章节的书写顺序规则，这样有顺序找页码的时候就更加好找。")]),s._v(" "),a("p",[s._v("在用户输入数据时，按照"),a("strong",[s._v("主键的顺序")]),s._v("在磁盘上规划和存储数据行。")]),s._v(" "),a("p",[a("strong",[s._v("聚集索引是自动维护的，数据在写入的时候就已经有序了")])]),s._v(" "),a("p",[a("strong",[s._v("聚集索引")]),s._v(" 直接将整行数据按照顺序存储到了叶子节点当中，上层节点依旧取下层节点的最小值。")])]),s._v(" "),a("h3",{attrs:{id:"_4-3-聚集索引和辅助索引共同使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-聚集索引和辅助索引共同使用"}},[s._v("#")]),s._v(" 4.3 聚集索引和辅助索引共同使用")]),s._v(" "),a("br"),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("例如：查询一个 name列 张三 的流程：")]),s._v(" "),a("p",[s._v("1.管理员设置 name 列为索引")]),s._v(" "),a("p",[s._v("2.数据库自动将系列值取出来")]),s._v(" "),a("p",[s._v("3.将排好序的值,均匀的存放在叶子节点")]),s._v(" "),a("p",[s._v("4.进一步生成枝节点和根节点")]),s._v(" "),a("p",[s._v("5.在叶子节点中的值,都会对应存储主键ID")]),s._v(" "),a("p",[s._v("6.MySQL 会自动选择主键作为聚集索引列,没有主键会选择唯一键,如果都没有会生成隐藏的主键")]),s._v(" "),a("p",[s._v("7.聚集索引直接将原表数据页,作为叶子节点,然后提取聚集索引列向上生成枝和根")]),s._v(" "),a("p",[s._v("8.聚集索引中遍历对应的存储主键ID")]),s._v(" "),a("p",[s._v("9.找到包含张三的数据行输出")])]),s._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"\\img\\day04-13.png",alt:"day04-13"}}),s._v(" "),a("h3",{attrs:{id:"_4-4-聚集索引和辅助索引的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-聚集索引和辅助索引的区别"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4.4")]),s._v(" "),a("strong",[s._v("聚集索引和辅助索引的区别")])]),s._v(" "),a("br"),s._v(" "),a("p",[a("strong",[s._v("辅助索引是自己创建的")]),s._v(" "),a("strong",[s._v("where name")]),s._v("  有序值、ID的主键值")]),s._v(" "),a("p",[a("strong",[s._v("聚集索引是自动生成的")]),s._v(" "),a("strong",[s._v("where id")]),s._v(" ID")]),s._v(" "),a("br"),s._v(" "),a("ul",[a("li",[a("p",[s._v("表中任何一个列都可以创建辅助索引,在你有需要的时候可以有多个辅助索引,只要名字不同即可")])]),s._v(" "),a("li",[a("p",[s._v("在一张表中,聚集索引只能有一个,一般是主键")])]),s._v(" "),a("li",[a("p",[s._v("辅助索引,叶子节点只存储索引列的有序值+聚集索（ID的主键值）引列值")])]),s._v(" "),a("li",[a("p",[s._v("聚集索引,叶子节点存储的是有序的整行数据.")])]),s._v(" "),a("li",[a("p",[s._v("MySQL 的表数据存储是聚集索引组织表")])])]),s._v(" "),a("h2",{attrs:{id:"_5-辅助索引细分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-辅助索引细分"}},[s._v("#")]),s._v(" "),a("strong",[s._v("5.")]),s._v(" "),a("strong",[s._v("辅助索引细分")])]),s._v(" "),a("br"),s._v(" "),a("p",[s._v("单列辅助索引 随便选一列")]),s._v(" "),a("p",[s._v("联合索引(覆盖索引)")]),s._v(" "),a("p",[s._v("唯一索引 索引列的值都是唯一的")]),s._v(" "),a("br"),s._v(" "),a("h2",{attrs:{id:"_6-索引树高度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-索引树高度"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6.")]),s._v(" "),a("strong",[s._v("索引树高度")])]),s._v(" "),a("br"),s._v(" "),a("p",[s._v("索引树高度应当越低越好,一般维持在3-4最佳")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("影响索引树高度的因素：")]),s._v(" "),a("p",[s._v("数据行数较多： 解决方法 分表 : parttion 用的比较少了（分片,分布式架构）")]),s._v(" "),a("p",[s._v("字段长度：解决方法 业务允许,尽量选择字符长度短的列作为索引列；业务不允许,采用前缀索引")]),s._v(" "),a("p",[s._v("数据类型： "),a("code",[s._v("char")]),s._v(" 和 "),a("code",[s._v("varchar")]),s._v(" "),a("code",[s._v("char")]),s._v("比"),a("code",[s._v("varchar")]),s._v(" 叶子节点消耗大，使用enum  作为索引列 （类似 12345） 索引树更简洁扫描起来更高效。")])]),s._v(" "),a("p",[s._v("​")]),s._v(" "),a("h2",{attrs:{id:"_7-索引的命令操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-索引的命令操作"}},[s._v("#")]),s._v(" "),a("strong",[s._v("7.")]),s._v(" "),a("strong",[s._v("索引的命令操作")])]),s._v(" "),a("br"),s._v(" "),a("h3",{attrs:{id:"_7-1-查询索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-查询索引"}},[s._v("#")]),s._v(" 7.1 查询索引")]),s._v(" "),a("br"),s._v(" "),a("p",[s._v("PRI  主键索引 聚集索引")]),s._v(" "),a("p",[s._v("MUL   辅助索引")]),s._v(" "),a("p",[s._v("UNI  唯一索引")]),s._v(" "),a("br"),s._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"\\img\\day04-14.png",alt:"day04-14"}}),s._v(" "),a("br"),s._v(" "),a("p",[s._v("查看索引信息：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" city\\G \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"\\img\\day04-15.png",alt:"day04-15"}}),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("h3",{attrs:{id:"_7-2-创建索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-创建索引"}},[s._v("#")]),s._v(" "),a("strong",[s._v("7.2 创建索引")])]),s._v(" "),a("br"),s._v(" "),a("p",[a("strong",[s._v("单列的辅助索引:")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" city "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" idx_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--（DDL操作 锁表）")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"\\img\\day04-16.png",alt:"day04-16"}}),s._v(" "),a("br"),s._v(" "),a("p",[a("strong",[s._v("多列的联合索引:")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" city "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" idx_c_p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("countrycode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("population"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("br"),s._v(" "),a("p",[a("strong",[s._v("唯一索引:")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" city "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unique")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" uidx_dis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("district"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("br"),s._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"\\img\\day04-17.png",alt:"day04-17"}}),s._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[s._v("有重复报错")]),s._v(" "),a("p",[s._v("唯一索引数据行中不能有重复")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("去除重复\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("district"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" city"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("distinct")]),s._v(" district"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" city"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("br"),s._v(" "),a("p",[a("strong",[s._v("前缀索引")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v(" 只能建在 字符串列\n mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" city "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" idx_dis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("district"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--只取前五个字符")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("br"),s._v(" "),a("h3",{attrs:{id:"_7-3-删除索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-删除索引"}},[s._v("#")]),s._v(" 7.3 删除索引")]),s._v(" "),a("br"),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" city\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" city "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" idx_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" city "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" idx_c_p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" city "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" idx_dis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("br"),s._v(" "),a("h2",{attrs:{id:"_8-索引压力测试-（对比索引前后效果）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-索引压力测试-（对比索引前后效果）"}},[s._v("#")]),s._v(" "),a("strong",[s._v("8.")]),s._v(" 索引压力测试 （对比索引前后效果）")]),s._v(" "),a("br"),s._v(" "),a("p",[s._v("压力测试准备：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("use")]),s._v(" test "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--导入数据")]),s._v("\n\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" source "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("tmp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("t100w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sql")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" count（"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("） "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t100w； "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--查询数据行数量")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t100w "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("；"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--查询前10行数据")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"\\img\\day04-17.png",alt:"day04-18"}}),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("h3",{attrs:{id:"_8-1-未做优化之前测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-未做优化之前测试"}},[s._v("#")]),s._v(" 8.1 未做优化之前测试")]),s._v(" "),a("br"),s._v(" "),a("p",[s._v("模拟"),a("strong",[s._v("100个用户")]),s._v("进行了"),a("strong",[s._v("2000次查询")])]),s._v(" "),a("p",[s._v("选k2列中的一个数据进行查询。")]),s._v(" "),a("p",[a("strong",[s._v("测试命令")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("mysqlslap --defaults-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/my.cnf "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--concurrency"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" --iterations"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" --create-schema"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--query"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"select * from test.t100w where k2='MN89'\"")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("engine")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("innodb "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--number-of-queries"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),s._v(" -uroot -p123 -verbose\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("br"),s._v(" "),a("br"),s._v(" "),a("p",[a("strong",[s._v("未设置索引测试结果：755.861 秒")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@db01 ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mysqlslap --defaults-file=/etc/my.cnf \\")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --concurrency"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" --iterations"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" --create-schema"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --query"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"select * from test.t100w where k2='MN89'\"")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("engine")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("innodb "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --number-of-queries"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),s._v(" -uroot -p123 -verbose\nmysqlslap: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Warning"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Using a password on the "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" line interface can be insecure.\nBenchmark\nRunning "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" engine rbose\nAverage number of seconds to run all queries: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("755.861")]),s._v(" seconds\nMinimum number of seconds to run all queries: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("755.861")]),s._v(" seconds\nMaximum number of seconds to run all queries: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("755.861")]),s._v(" seconds\nNumber of clients running queries: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\nAverage number of queries per client: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h3",{attrs:{id:"_8-2索引优化后"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2索引优化后"}},[s._v("#")]),s._v(" 8.2索引优化后")]),s._v(" "),a("br"),s._v(" "),a("p",[a("strong",[s._v("创建辅助索引")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" t100w "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" idx_k2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("k2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"\\img\\day04-19.png",alt:"day04-19"}}),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("p",[a("strong",[s._v("未设置索引测试结果：1.678 秒")]),s._v("  相差700倍")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@db01 ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mysqlslap --defaults-file=/etc/my.cnf \\")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --concurrency"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" --iterations"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" --create-schema"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --query"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"select * from test.t100w where k2='MN89'\"")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("engine")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("innodb "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --number-of-queries"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),s._v(" -uroot -p123 -verbose\nmysqlslap: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Warning"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Using a password on the "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" line interface can be insecure.\nBenchmark\nRunning "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" engine rbose\nAverage number of seconds to run all queries: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.678")]),s._v(" seconds\nMinimum number of seconds to run all queries: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.678")]),s._v(" seconds\nMaximum number of seconds to run all queries: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.678")]),s._v(" seconds\nNumber of clients running queries: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\nAverage number of queries per client: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("br"),s._v(" "),a("h2",{attrs:{id:"_9-执行计划分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-执行计划分析"}},[s._v("#")]),s._v(" "),a("strong",[s._v("9.")]),s._v(" "),a("strong",[s._v("执行计划分析")])]),s._v(" "),a("br"),s._v(" "),a("h3",{attrs:{id:"_9-1-执行计划的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-执行计划的作用"}},[s._v("#")]),s._v(" "),a("strong",[s._v("9.1")]),s._v(" "),a("strong",[s._v("执行计划的作用")])]),s._v(" "),a("br"),s._v(" "),a("p",[s._v("将优化器 选择后的执行计划 截取出来.便于管理管理员判断语句得执行效率。")]),s._v(" "),a("br"),s._v(" "),a("h3",{attrs:{id:"_9-2-获取执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-获取执行"}},[s._v("#")]),s._v(" "),a("strong",[s._v("9.2")]),s._v(" "),a("strong",[s._v("获取执行")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--SQL语句")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("explain")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--SQL 语句")]),s._v("\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("t100w "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" k2"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'MN89'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--获取语句的计划")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("获取语句的计划：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("t100w "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" k2"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'MN89'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--获取语句的计划")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("----+-------------+-------+------------+------+---------------+------+---------+------+---------+----------+-------------+")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" select_type "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" partitions "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" possible_keys "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" key_len "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" ref "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("rows")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" filtered "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Extra    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("----+-------------+-------+------------+------+---------------+------+---------+------+---------+----------+-------------+")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SIMPLE")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" t100w "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1027638")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.00")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Using")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("----+-------------+-------+------------+------+---------------+------+---------+------+---------+----------+-------------+")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("br"),s._v(" "),a("h3",{attrs:{id:"_9-3-分析执行计划"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-分析执行计划"}},[s._v("#")]),s._v(" "),a("strong",[s._v("9.3")]),s._v(" "),a("strong",[s._v("分析执行计划")])]),s._v(" "),a("h4",{attrs:{id:"_9-3-1-table-列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-1-table-列"}},[s._v("#")]),s._v(" "),a("strong",[s._v("9.3.1 table")]),s._v(" 列")]),s._v(" "),a("p",[s._v("table 表名")]),s._v(" "),a("h4",{attrs:{id:"_9-3-2-type列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-2-type列"}},[s._v("#")]),s._v(" "),a("strong",[s._v("9.3.2 type")]),s._v("列")]),s._v(" "),a("p",[s._v("查询的类型:")]),s._v(" "),a("p",[s._v("全表扫描  : ALL\n索引扫描 级别 : index,range,ref,eq_ref,const(system),NULL  "),a("strong",[s._v("从左到右性能越好")]),s._v("。")]),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("p",[a("strong",[s._v("索引扫描级别分类说明：")])]),s._v(" "),a("p",[a("strong",[s._v("index:")]),s._v(" "),a("strong",[s._v("全索引扫描")]),s._v(" ，需要遍历整个索引树才能获取到数据 ,"),a("strong",[s._v("性能比全表扫描ALL好")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" countrycode "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" city"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("p",[a("strong",[s._v("range:")]),s._v(" "),a("strong",[s._v("索引范围扫描")]),s._v(" "),a("code",[s._v("> < >= <= , between and ,or,in,like")]),s._v("  （"),a("strong",[s._v("范围查询")]),s._v("）")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" city "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" city "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" countrycode "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'CH%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("br"),s._v(" "),a("p",[a("strong",[s._v("B树 对连续数据查询有优化，可以享受到B树 叶子节点双向指针的优化 。")])]),s._v(" "),a("p",[s._v("所以 "),a("code",[s._v("or in range")]),s._v("性能 比 "),a("code",[s._v("> < >= <= , between and like")]),s._v("要低")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" city "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" countrycode"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'CHN'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" countrycode"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'USA'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" city "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" countrycode "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'CHN'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'USA'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("br"),s._v(" "),a("p",[a("strong",[s._v("对于辅助索引来讲,"),a("code",[s._v("!=")]),s._v("（不等于） 和"),a("code",[s._v("not in")]),s._v("等语句是不走索引的")])]),s._v(" "),a("p",[a("strong",[s._v("对于主键索引列来讲,"),a("code",[s._v("!=")]),s._v(" 和"),a("code",[s._v("not in")]),s._v("等语句是走 range索引")])]),s._v(" "),a("p",[a("strong",[a("code",[s._v("in or")]),s._v(" 一般改写为 "),a("code",[s._v("union all")]),s._v("  进行语句优化：")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" city "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" countrycode"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'CHN'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" countrycode"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'USA'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--改写为：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" city "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" countrycode"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'CHN'")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("all")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" city "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" countrycode"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'USA'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("p",[a("strong",[s._v("ref: 辅助索引等值查询")])]),s._v(" "),a("p",[a("code",[s._v("in or")]),s._v("  改写后的  "),a("code",[s._v("union all")]),s._v("  语句 变成了等值查询 ref 。")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" city "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" countrycode"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'CHN'")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("all")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" city "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" countrycode"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'USA'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("p",[a("strong",[s._v("eq_ref : 多表连接时,子表使用主键列或唯一列作为连接条件")])]),s._v(" "),a("p",[s._v("A join B   时 "),a("strong",[s._v("B就是子表")])]),s._v(" "),a("p",[s._v("on a.x = B.y   "),a("strong",[s._v("B.y 列是主键或唯一键时 走eq_ref")])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("优化多表连接要求")]),s._v(" "),a("p",[s._v("在优化多表连接查询时，第一保证驱动表（左边）的数据量级是最小的因为它不能走索引，它是全表数据和别的表进行对比第二张表开始可以走索引。")]),s._v(" "),a("p",[s._v("建议被连接的表它的连接列"),a("code",[s._v("on")]),s._v(" 的条件"),a("code",[s._v("B.y")]),s._v("最好是主键或唯一键，实在不行是辅助索引。")]),s._v(" "),a("p",[s._v("在表的设计阶段就应该设计好的。")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("population \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" city "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" a \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" country "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" b \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("countrycode"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("code \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("population"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("br"),s._v("city 是条件列")]),s._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"\\img\\day04-20.png",alt:"day04-20"}}),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("p",[a("strong",[s._v("const(system) : 主键或者唯一键的等值查询")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" city "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("br"),s._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"\\img\\day04-21.png",alt:"day04-21"}}),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("br"),s._v(" "),a("p",[a("strong",[s._v("NULL 性能最高因为没有这个数据行查不到。")])]),s._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"\\img\\day04-22.png",alt:"day04-22"}})])}),[],!1,null,null,null);t.default=e.exports}}]);